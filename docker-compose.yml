version: "3.3"
services:
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    depends_on:
    - traefik
    env_file: .env
    ports:
    - 9117:9117/tcp
    volumes:
    - /var/lib/misc/config/jackett:/config
    - /var/lib/misc/downloads:/downloads
    labels:
    - traefik.enable=true
    - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
    - traefik.http.routers.jackett.entrypoints=websecure
    - traefik.http.routers.jackett.tls.certresolver=mydnschallenge
    - traefik.http.services.jackett.loadbalancer.server.port=9117
  plex:
    image: plexinc/pms-docker
    container_name: plex
    depends_on:
    - traefik
    env_file: .env
    hostname: watchtower.${DOMAIN}
    ports:
    - 1900:1900/udp
    - 3005:3005/tcp
    - 8324:8324/tcp
    - 32400:32400/tcp
    - 32410:32410/udp
    - 32412:32412/udp
    - 32413:32413/udp
    - 32414:32414/udp
    - 32469:32469/tcp
    environment:
    - PLEX_CLAIM=${CLAIM}
    - ADVERTISE_IP="https://watchtower.${DOMAIN}"
    devices:
    - /dev/dri:/dev/dri
    volumes:
    - /var/lib/misc/config/plex:/config
    - /var/lib/plex/data:/data
    - /var/lib/plex/transcode:/transcode
    - /var/lib/media/movies:/data/movies
    - /var/lib/media/shows:/data/tvshows
    labels:
    - traefik.enable=true
    - traefik.http.routers.plex.rule=Host(`watchtower.${DOMAIN}`)
    - traefik.http.routers.plex.entrypoints=websecure
    - traefik.http.routers.plex.tls.certresolver=mydnschallenge
    - traefik.http.services.plex.loadbalancer.server.port=32400
  portainer:
    image: portainer/portainer
    container_name: portainer
    depends_on:
    - traefik
    env_file: .env
    command: -H unix:///var/run/docker.sock
    volumes:
    - /var/lib/misc/config/portainer/data:/data
    - /var/lib/misc/config/shared:/shared
    - /var/run/docker.sock:/var/run/docker.sock
    labels:
    - traefik.enable=true
    - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
    - traefik.http.routers.portainer.entrypoints=websecure
    - traefik.http.routers.portainer.tls.certresolver=mydnschallenge
  qbittorrentvpn:
    image: markusmcnugen/qbittorrentvpn
    container_name: qbt
    privileged: true
    depends_on:
    - traefik
    env_file: .env
    environment:
    - LAN_NETWORK=192.168.1.0/24
    - NAME_SERVERS=1.1.1.1,1.0.0.1
    - VPN_ENABLED=yes
    - WEBUI_PORT_ENV=8181
    ports:
    - 8181:8181
    - 8999:8999/tcp
    - 8999:8999/udp
    volumes:
    - /var/lib/misc/config/qbt:/config
    - /var/lib/misc/downloads:/downloads
    - /var/lib/media:/media
    labels:
    - traefik.enable=true
    - traefik.http.routers.qbt.rule=Host(`qbt.${DOMAIN}`)
    - traefik.http.routers.qbt.entrypoints=websecure
    - traefik.http.routers.qbt.tls.certresolver=mydnschallenge
    - traefik.http.services.qbt.loadbalancer.server.port=8181
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    depends_on:
    - jackett
    - qbittorrentvpn
    - traefik
    env_file: .env
    ports:
    - 7878:7878
    volumes:
    - /var/lib/misc/config/radarr:/config
    - /var/lib/media/movies:/movies
    - /var/lib/misc/downloads:/downloads
    labels:
    - traefik.enable=true
    - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
    - traefik.http.routers.radarr.entrypoints=websecure
    - traefik.http.routers.radarr.tls.certresolver=mydnschallenge
    - traefik.http.services.radarr.loadbalancer.server.port=7878
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
    - jackett
    - qbittorrentvpn
    - traefik
    env_file: .env
    ports:
    - 8989:8989
    volumes:
    - /var/lib/misc/config/sonarr:/config
    - /var/lib/misc/downloads:/downloads
    - /var/lib/media/shows:/tv
    labels:
    - traefik.enable=true
    - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
    - traefik.http.routers.sonarr.entrypoints=websecure
    - traefik.http.routers.sonarr.tls.certresolver=mydnschallenge
    - traefik.http.services.sonarr.loadbalancer.server.port=8989
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "1000"
    depends_on:
    - cadvisor
    - traefik
    env_file: .env
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - /var/lib/misc/config/prometheus:/prometheus
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    env_file: .env
    command: --port 9999
    ports:
    - 9999:9999
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "1000"
    depends_on:
    - prometheus
    - traefik
    env_file: .env
    ports:
    - 3000:3000
    volumes:
    - /var/lib/misc/config/grafana:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    labels:
    - traefik.enable=true
    - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)
    - traefik.http.routers.grafana.entrypoints=websecure
    - traefik.http.routers.grafana.tls.certresolver=mydnschallenge
    - traefik.http.services.grafana.loadbalancer.server.port=3000
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    env_file: .env
    ports:
    - 9100:9100
    command:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --collector.filesystem.ignored-mount-points
    - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    env_file: .env
    ports:
    - 9093:9093
  traefik:
    image: traefik:v2.2
    container_name: traefik
    env_file: .env
    command:
    - --api.insecure=true
    - --providers.docker=true
    - --providers.docker.exposedbydefault=false
    - --entrypoints.web.address=:80
    - --entrypoints.websecure.address=:443
    - --certificatesresolvers.mydnschallenge.acme.dnschallenge=true
    - --certificatesresolvers.mydnschallenge.acme.dnschallenge.provider=cloudflare
    - --certificatesresolvers.mydnschallenge.acme.email=${EMAIL}
    - --certificatesresolvers.mydnschallenge.acme.storage=/letsencrypt/acme.json
    environment:
    - CF_API_EMAIL=${EMAIL}
    - CF_API_KEY=${CF_API_KEY}
    ports:
    - 80:80
    - 443:443
    - 8080:8080
    volumes:
    - ./letsencrypt:/letsencrypt
    - /var/run/docker.sock:/var/run/docker.sock:ro
  whoami:
    image: containous/whoami
    container_name: whoami
    labels:
    - traefik.enable=true
    - traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)
    - traefik.http.routers.whoami.entrypoints=websecure
    - traefik.http.routers.whoami.tls.certresolver=mydnschallenge
