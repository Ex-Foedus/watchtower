version: "2.4"
services:
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    volumes:
    - ./config/jackett:/config
    - /var/lib/watchtower/downloads:/downloads
    ports:
    - 9117:9117
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    volumes:
    - ./config/lidarr:/config
    - /var/lib/watchtower/downloads:/downloads
    - /var/lib/watchtower/audio:/music
    ports:
    - 8686:8686
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    env_file: .env
    volumes:
    - ./config/ombi:/config
    labels:
    - traefik.enable=true
    - traefik.http.routers.ombi.rule=Host(`ombi.${DOMAIN}`)
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    hostname: watchtower
    devices:
    - /dev/dri
    volumes:
    - ./config/plex:/config
    - /var/lib/plex/data:/data
    - /var/lib/plex/transcode:/transcode
    - /var/lib/watchtower/movies:/data/movies
    - /var/lib/watchtower/shows:/data/tvshows
    env_file: .env
    environment:
    - ADVERTISE_IP=http://${HOST_IP}:32400/
    - PLEX_CLAIM=${PLEX_CLAIM}
    - PLEX_GID=1000
    - PLEX_UID=1000
    - UMASK_SET=022
    - VERSION=docker
    ports:
    - 32400:32400
    - 3005:3005
    - 8324:8324
    - 32469:32469
    - 1900:1900/udp
    - 32410:32410/udp
    - 32412:32412/udp
    - 32413:32413/udp
    - 32414:32414/udp
    labels:
    - traefik.enable=true
    - traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)
    - traefik.http.services.plex.loadbalancer.server.port=32400
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
    - ./config/portainer/data:/data
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
    - 9000:9000
    env_file: .env
    command: -H unix:///var/run/docker.sock
    labels:
    - traefik.enable=true
    - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
    - traefik.http.services.portainer.loadbalancer.server.port=9000
  qbittorrent:
    image: jovalle/qbittorrent
    container_name: qbittorrent
    privileged: true
    volumes:
    - ./config/qbittorrent:/config
    - /var/lib/watchtower/downloads:/downloads
    - /var/lib/watchtower:/media
    ports:
    - 8080:8080
    - 8999:8999
    - 8999:8999/udp
    env_file: .env
    environment:
    - LAN_NETWORK=${LAN_NETWORK}
    - NAME_SERVERS=${NAME_SERVERS}
    - VPN_ENABLED=yes
    - WEBUI_PORT_ENV=8080
    labels:
    - traefik.enable=true
    - traefik.http.routers.qbittorrentvpn.rule=Host(`qbittorrent.${DOMAIN}`)
  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    depends_on:
    - jackett
    - qbittorrentvpn
    volumes:
    - ./config/radarr:/config
    - /var/lib/watchtower/movies:/movies
    - /var/lib/watchtower/downloads:/downloads
    ports:
    - 7878:7878
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    depends_on:
    - jackett
    - qbittorrentvpn
    volumes:
    - ./config/sonarr:/config
    - /var/lib/watchtower/downloads:/downloads
    - /var/lib/watchtower/shows:/tv
    ports:
    - 8989:8989
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    volumes:
    - ./config/tautulli:/config
    - ./config/plex/Library/Application\ Support/Plex\ Media\ Server/Logs
    ports:
    - 8181:8181
    env_file: .env
    labels:
    - traefik.enable=true
    - traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)
  traefik:
    image: traefik:v2.2
    container_name: traefik
    volumes:
    - ./traefik.toml:/traefik.toml
    - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
    - 80:80
    - 443:443
    - 9000:8080
    env_file: .env